name: Convert README to PDF
on:
  push:
    branches:
      - main
      - master
    paths:
      - '**/README.md'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install md-to-pdf and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
          npm install -g md-to-pdf
          md-to-pdf --version

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Convert PDFs
        id: convert
        run: |
          CONFIG_FILE=".github/workflows/pdf-config.json"
          
          # Check if config file exists
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "Error: Configuration file not found: $CONFIG_FILE"
            exit 1
          fi
          
          # Get PDF options from config
          PDF_OPTIONS=$(jq -c '.pdfOptions' $CONFIG_FILE)
          echo "$PDF_OPTIONS" > .md2pdf.json
          
          # Create temporary file to store successful conversions
          SUCCESS_LIST=$(mktemp)
          
          # Process each language
          for lang in zh en de; do
            echo "Processing $lang..."
            
            # Set input and output paths
            INPUT_FILE="${lang}/README.md"
            OUTPUT_FILE="${lang}/obsidian-cheatsheet-${lang}.pdf"
            
            echo "Input file: $INPUT_FILE"
            echo "Output file: $OUTPUT_FILE"
            
            if [ -f "$INPUT_FILE" ]; then
              # Create output directory if it doesn't exist
              mkdir -p "$(dirname "$OUTPUT_FILE")"
              
              # Convert markdown to PDF
              echo "Converting $INPUT_FILE to PDF..."
              if md-to-pdf "$INPUT_FILE" --config-file .md2pdf.json --output "$OUTPUT_FILE" --debug; then
                if [ -f "$OUTPUT_FILE" ]; then
                  echo "Successfully created: $OUTPUT_FILE"
                  echo "$OUTPUT_FILE" >> "$SUCCESS_LIST"
                else
                  echo "Error: PDF file not found after conversion"
                fi
              else
                echo "Error: Conversion failed for $lang"
              fi
            else
              echo "Warning: Input file not found: $INPUT_FILE"
            fi
          done
          
          # Check if any files were successfully generated
          if [ -s "$SUCCESS_LIST" ]; then
            echo "Generated PDF files:"
            cat "$SUCCESS_LIST"
            echo "Files in workspace:"
            find . -type f -name "*.pdf"
            
            # Set output variables
            echo "has_pdfs=true" >> $GITHUB_OUTPUT
            echo "pdf_paths<<EOF" >> $GITHUB_OUTPUT
            cat "$SUCCESS_LIST" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "No PDF files were generated"
            echo "has_pdfs=false" >> $GITHUB_OUTPUT
          fi
          
          # Cleanup temporary file
          rm -f "$SUCCESS_LIST"

      - name: Debug Generated Files
        run: |
          echo "Has PDFs: ${{ steps.convert.outputs.has_pdfs }}"
          echo "Current directory contents:"
          ls -R
          echo "Looking for PDF files:"
          find . -name "*.pdf"

      - name: Upload PDFs as artifacts
        if: steps.convert.outputs.has_pdfs == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: obsidian-cheatsheets
          path: |
            zh/obsidian-cheatsheet-zh.pdf
            en/obsidian-cheatsheet-en.pdf
            de/obsidian-cheatsheet-de.pdf
          retention-days: 90
          if-no-files-found: warn
